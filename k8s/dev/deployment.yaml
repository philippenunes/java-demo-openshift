apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-java-app
  namespace: philippenunes-dev
  labels:
    app: my-java-app
    version: v1
  annotations:
    argocd-image-updater.argoproj.io/image-list: myapp=image-registry.openshift-image-registry.svc:5000/philippenunes-dev/my-java-app
    argocd-image-updater.argoproj.io/myapp.update-strategy: latest
    argocd-image-updater.argoproj.io/write-back-method: git
    argocd-image-updater.argoproj.io/git-branch: main
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-java-app
  template:
    metadata:
      labels:
        app: my-java-app
        version: v1
    spec:
      containers:
      - name: my-java-app
        image: image-registry.openshift-image-registry.svc:5000/philippenunes-dev/my-java-app:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: JAVA_OPTS
          value: "-Xmx512m -Xms256m"
        - name: SERVER_PORT
          value: "8080"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      imagePullSecrets:
      - name: default-dockercfg-glvnp
---
apiVersion: v1
kind: Service
metadata:
  name: my-java-app-service
  namespace: philippenunes-dev
  labels:
    app: my-java-app
spec:
  selector:
    app: my-java-app
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: my-java-app-route
  namespace: philippenunes-dev
  labels:
    app: my-java-app
spec:
  host: my-java-app-dev.apps-crc.testing
  to:
    kind: Service
    name: my-java-app-service
    weight: 100
  port:
    targetPort: http
  wildcardPolicy: None